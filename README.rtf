{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Apple-Chancery;\f2\fnil\fcharset0 HelveticaNeue;
\f3\fnil\fcharset0 .AppleColorEmojiUI;\f4\fnil\fcharset0 HelveticaNeue-Italic;\f5\fnil\fcharset0 Consolas;
\f6\fnil\fcharset0 HelveticaNeue-Bold;}
{\colortbl;\red255\green255\blue255;\red54\green55\blue67;\red255\green255\blue255;\red88\green91\blue109;
\red242\green49\blue74;\red239\green240\blue242;\red86\green78\blue195;\red35\green41\blue49;\red246\green246\blue239;
\red37\green160\blue197;}
{\*\expandedcolortbl;;\cssrgb\c27451\c28235\c33333;\cssrgb\c100000\c100000\c100000;\cssrgb\c41961\c43529\c50196;
\cssrgb\c96863\c29412\c36078;\cssrgb\c94902\c95294\c96078;\cssrgb\c41176\c40392\c80784;\cssrgb\c18431\c21176\c25098;\cssrgb\c97255\c97255\c94902;
\cssrgb\c15686\c68627\c81569;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid201\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 READ ME\
\
\pard\pardeftab720\sl560\sa120\partightenfactor0

\f1\fs48 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Projet : Le scrappeur fou\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f2\fs28 \cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \'a0\'a0\cb1 \
\pard\pardeftab720\sl500\sa120\partightenfactor0

\f1\fs41\fsmilli20880 \cf2 \strokec2 1. Introduction\
\pard\pardeftab720\sa240\partightenfactor0

\f2\fs28 \cf4 \strokec4 Aujourd'hui, tu vas automatiser la r\'e9cup\'e9ration massive de donn\'e9es issus de sites internet (= tu vas scraper). Tes comp\'e9tences en Ruby et en HTML vont te permettre de r\'e9cup\'e9rer ces informations en moins d'une journ\'e9e. Tu t'amuseras avec le cours des cryptomonnaies, tu iras r\'e9cup\'e9rer les e-mails des mairies de notre beau pays, puis tu chopperas la liste des e-mails des d\'e9put\'e9s de France. Tu ne te penses pas capable de tout \'e7a\'a0? Et bien tu vas voir que si.\
Les standards habituels seront attendus\'a0: un dossier bien rang\'e9, de beaux README et Gemfile, des tests qui v\'e9rifient que tout fonctionne.\
\pard\pardeftab720\sl500\sa120\partightenfactor0

\f1\fs41\fsmilli20880 \cf2 \strokec2 2. Le projet\
\pard\pardeftab720\sl420\sa120\partightenfactor0

\fs36\fsmilli18120 \cf2 2.1. Initialize\
\pard\pardeftab720\sa240\partightenfactor0

\f2\fs28 \cf4 \strokec4 Commence par cr\'e9er une structure de dossier propre avec le dossier lib, le dossier spec, etc. Cr\'e9\'e9 un Gemfile, un README et fais ton\'a0
\f1\fs25\fsmilli12600 \cf5 \cb6 \strokec5 $ git init
\f2\fs28 \cf4 \cb1 \strokec4 . Maintenant on peut commencer \'e0 travailler 
\f3 \uc0\u55357 \u56856 
\f2 \
\pard\pardeftab720\sl420\sa120\partightenfactor0

\f1\fs36\fsmilli18120 \cf2 \strokec2 2.2. Dark Trader\
\pard\pardeftab720\sa240\partightenfactor0

\f2\fs28 \cf4 \strokec4 Lehman Brothers, impressionn\'e9s par ton algorithme d'optimisation d'achat / vente, veut encore faire appel \'e0 toi. Leur Chief Digital Officer, tr\'e8s hype, a entendu parler au JT de TF1 d'un "
\f4\i truc r\'e9volutionnaire qui s'appelle le bloque-chienne
\f2\i0 ". Il veut en acheter plein. Pour le conseiller, tu vas devoir r\'e9cup\'e9rer le cours de toutes les cryptomonnaies du march\'e9.\
En prenant pour source le site\'a0{\field{\*\fldinst{HYPERLINK "https://coinmarketcap.com/all/views/all/"}}{\fldrslt \cf7 \ul \ulc7 \strokec7 CoinMarketCap}}, fait un programme qui r\'e9cup\'e8re le cours de toutes les cryptomonnaies et les enregistre bien proprement dans un array de hashs.\uc0\u8232 Ton array devra avoir le format suivant :\
\pard\pardeftab720\sl420\partightenfactor0

\f5 \cf3 \cb8 \strokec3 a \cf9 \strokec9 =\cf3 \strokec3  \cf7 \strokec7 [\cf3 \strokec3 \
  \cf7 \strokec7 \{\cf3 \strokec3  \cf10 \strokec10 "BTC"\cf3 \strokec3  \cf9 \strokec9 =\cf3 \strokec3 > \cf7 \strokec7 5245.12\cf3 \strokec3  \cf7 \strokec7 \},\cf3 \strokec3 \
  \cf7 \strokec7 \{\cf3 \strokec3  \cf10 \strokec10 "ETH"\cf3 \strokec3  \cf9 \strokec9 =\cf3 \strokec3 > \cf7 \strokec7 217.34\cf3 \strokec3  \cf7 \strokec7 \},\cf3 \strokec3  \
  etc\
\pard\pardeftab720\sl420\partightenfactor0
\cf7 \strokec7 ]\cf3 \strokec3 \
\pard\pardeftab720\sa240\partightenfactor0

\f2 \cf4 \cb1 \strokec4 Pour les tests, inspire-toi de la ressource plus haut. Il n'y a pas besoin de faire 36\'a0000 tests, il faut juste arriver \'e0 tester 1) le fonctionnement de base de ton programme (pas d'erreur ni de retour vide) et 2) que ton programme sort bien un array coh\'e9rent (v\'e9rifier la pr\'e9sence de 2-3 cryptomonnaies, v\'e9rifier que l\'92array est de taille coh\'e9rente, etc.).\
Quelques petites aides pour ce premier exercice :\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl500\partightenfactor0
\ls2\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Il est possible de faire le programme en n'allant que sur une seule URL. C'est un bon moyen pour faire un programme rapide car ne chargeant pas 2000 pages HTML.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Tout se jouera sur la r\'e9daction d'un XPath pertinent et pr\'e9cis qui extrait juste ce qu'il faut d'\'e9l\'e9ments HTML. Puis un bon traitement de ces \'e9l\'e9ments pour en extraire les 2 infos dont tu as besoin\'a0: le nom des crypto et leur cours.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Un programme qui scrappe sans rien te dire, c'est non seulement nul mais en plus, tu ne sais pas s'il marche, s'il tourne en boucle ou s\'92il attend que ton wifi fonctionne.\'a0
\f6\b Mets des\'a0
\f1\b0\fs25\fsmilli12600 \cf5 \cb6 \strokec5 puts
\f6\b\fs28 \cf4 \cb1 \strokec4 \'a0dans ton code pour que ton terminal affiche quelque chose \'e0 chaque fois qu'il a pu r\'e9cup\'e9rer une donn\'e9e
\f2\b0 . Comme \'e7a tu vois ton scrappeur qui fonctionne et avec des mots qui apparaissent tout seul sur ton terminal, tu vas donner l'impression que t'es un hacker. Styla\'ef.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl500\partightenfactor0
\ls2\ilvl0
\f6\b \cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Pense \'e0 bien nommer tes variables pour ne pas te perdre\'a0!
\f2\b0 \'a0Par exemple, quand tu as un array, nomme-le\'a0
\f1\fs25\fsmilli12600 \cf5 \cb6 \strokec5 crypto_name_array
\f2\fs28 \cf4 \cb1 \strokec4 \'a0ou \'e0 minima mets son nom au pluriel\'a0
\f1\fs25\fsmilli12600 \cf5 \cb6 \strokec5 crypto_nameS
\f2\fs28 \cf4 \cb1 \strokec4 . Sinon tu vas oublier que c'est un array et tu vas tenter des\'a0
\f1\fs25\fsmilli12600 \cf5 \cb6 \strokec5 .text
\f2\fs28 \cf4 \cb1 \strokec4 \'a0dessus alors qu'il faut bosser avec un\'a0
\f1\fs25\fsmilli12600 \cf5 \cb6 \strokec5 .each
\f2\fs28 \cf4 \cb1 \strokec4 .\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl500\partightenfactor0
\ls2\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Rappel: un hash s\'92initialise avec\'a0
\f1\fs25\fsmilli12600 \cf5 \cb6 \strokec5 result = Hash.new
\f2\fs28 \cf4 \cb1 \strokec4 \'a0et on y stocke des infos avec\'a0
\f1\fs25\fsmilli12600 \cf5 \cb6 \strokec5 result['ta_key'] = 'ta_value'
\f2\fs28 \cf4 \cb1 \strokec4 \
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 N'h\'e9site pas \'e0\'a0
\f6\b d\'e9couper ton programme en plusieurs \'e9tapes simples et dont le fonctionnement est facile \'e0 v\'e9rifier
\f2\b0 . Par exemple\'a0: 1) Isoler les \'e9l\'e9ments HTML qui vont bien, 2) En extraire le texte et mettre \'e7a dans un hash, 3) R\'e9organiser ce hash dans un array de plusieurs mini-hash comme demand\'e9.\uc0\u8232 M\'eame si \'e7a n'est pas le chemin le plus court, l'essentiel est que chaque petite \'e9tape te fasse avancer et qu'\'e0 chaque fois tu te dises "ok, \'e9tape 1), \'e7a fonctionne nickel - pas de bug. Passons \'e0 la suite".\
\pard\pardeftab720\sl420\sa120\partightenfactor0

\f1\fs36\fsmilli18120 \cf2 \strokec2 2.3. Mairie christmas\
\pard\pardeftab720\sa240\partightenfactor0

\f2\fs28 \cf4 \strokec4 Le CEO de Get-email Corp a besoin de tes services. Il voudrait toutes les adresses e-mail des mairies du Val d'Oise. Aucun souci pour toi. Va sur\'a0{\field{\*\fldinst{HYPERLINK "http://annuaire-des-mairies.com/"}}{\fldrslt \cf7 \ul \ulc7 \strokec7 cet annuaire des mairies}}\'a0et r\'e9cup\'e8re les adresses e-mails des mairies du Val d'Oise. Comme pour l'exercice pr\'e9c\'e9dent, tu devras enregistrer les donn\'e9es dans un array de hash suivant ce format :\
\pard\pardeftab720\sl420\partightenfactor0

\f5 \cf3 \cb8 \strokec3 a \cf9 \strokec9 =\cf3 \strokec3  \cf7 \strokec7 [\cf3 \strokec3 \
  \cf7 \strokec7 \{\cf3 \strokec3  \cf10 \strokec10 "ville_1"\cf3 \strokec3  \cf9 \strokec9 =\cf3 \strokec3 > \cf10 \strokec10 "email_1"\cf3 \strokec3  \cf7 \strokec7 \},\cf3 \strokec3 \
  \cf7 \strokec7 \{\cf3 \strokec3  \cf10 \strokec10 "ville_2"\cf3 \strokec3  \cf9 \strokec9 =\cf3 \strokec3 > \cf10 \strokec10 "email_2"\cf3 \strokec3  \cf7 \strokec7 \},\cf3 \strokec3  \
  etc\
\pard\pardeftab720\sl420\partightenfactor0
\cf7 \strokec7 ]\cf3 \strokec3 \
\pard\pardeftab720\sa240\partightenfactor0

\f2 \cf4 \cb1 \strokec4 D\'e9composons le programme en 2 sous-probl\'e8me simples:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl500\partightenfactor0
\ls3\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Tu dois \'eatre capable d'obtenir un e-mail de mairie \'e0 partir de la page de cette derni\'e8re (pas en partant du listing complet des mairies). Fais d'abord une m\'e9thode\'a0
\f1\fs25\fsmilli12600 \cf5 \cb6 \strokec5 get_townhall_email(townhall_url)
\f2\fs28 \cf4 \cb1 \strokec4 \'a0qui r\'e9cup\'e8re l\'92e-mail d'une mairie \'e0 partir de l'URL de mairies, par exemple celle de\'a0{\field{\*\fldinst{HYPERLINK "https://www.annuaire-des-mairies.com/95/avernes.html"}}{\fldrslt \cf7 \ul \ulc7 \strokec7 Avernes}}.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Une fois que tu sais le faire pour une mairie, tu vas vouloir industrialiser et r\'e9p\'e9ter \'e7a sur tout l'annuaire du Val d'Oise. La prochaine \'e9tape est de coder une m\'e9thode\'a0
\f1\fs25\fsmilli12600 \cf5 \cb6 \strokec5 get_townhall_urls
\f2\fs28 \cf4 \cb1 \strokec4 \'a0qui r\'e9cup\'e8re les URLs de\'a0{\field{\*\fldinst{HYPERLINK "https://www.annuaire-des-mairies.com/val-d-oise.html"}}{\fldrslt \cf7 \ul \ulc7 \strokec7 chaque ville du Val d'Oise}}.\
\pard\pardeftab720\sa240\partightenfactor0
\cf4 Quand tu es assez s\'fbr que chaque m\'e9thode marche s\'e9par\'e9ment, tu as juste \'e0 imbriquer les deux et \'e0 toi la gloire.\
Pour les tests, ce sera la m\'eame chose que pour l'exercice pr\'e9c\'e9dent mais appliqu\'e9 aux deux m\'e9thodes\'a0: des tests de fonctionnement de base et des tests de coh\'e9rence du r\'e9sultat.\
\pard\pardeftab720\sl420\sa120\partightenfactor0

\f1\fs36\fsmilli18120 \cf2 \strokec2 2.4. Cher d\'e9put\'e9\
\pard\pardeftab720\sa240\partightenfactor0

\f2\fs28 \cf4 \strokec4 Maintenant, fini de se faire m\'e2cher le travail par tes gentils formateurs de THP. Tu dois r\'e9cup\'e9rer la liste compl\'e8te des d\'e9put\'e9s de France ainsi que leurs adresses e-mail. Cherche par toi-m\'eame le site le plus ais\'e9 \'e0 scrapper et stocke les informations extraites dans une array de hashs selon ce format (un peu diff\'e9rent des exercices pr\'e9c\'e9dents)\'a0:\
\pard\pardeftab720\sl420\partightenfactor0

\f5 \cf3 \cb8 \strokec3 a \cf9 \strokec9 =\cf3 \strokec3  \cf7 \strokec7 [\cf3 \strokec3 \
  \cf7 \strokec7 \{\cf3 \strokec3  \
    \cf10 \strokec10 "first_name"\cf3 \strokec3  \cf9 \strokec9 =\cf3 \strokec3 > \cf10 \strokec10 "Jean"\cf7 \strokec7 ,\cf3 \strokec3 \
    \cf10 \strokec10 "last_name"\cf3 \strokec3  \cf9 \strokec9 =\cf3 \strokec3 > \cf10 \strokec10 "Durant"\cf7 \strokec7 ,\cf3 \strokec3 \
    \cf10 \strokec10 "email"\cf3 \strokec3  \cf9 \strokec9 =\cf3 \strokec3 > \cf10 \strokec10 "jean.durant@assembl\'e9e.fr"\cf3 \strokec3 \
  \cf7 \strokec7 \},\cf3 \strokec3 \
  \cf7 \strokec7 \{\cf3 \strokec3  \
    \cf10 \strokec10 "first_name"\cf3 \strokec3  \cf9 \strokec9 =\cf3 \strokec3 > \cf10 \strokec10 "Martin"\cf7 \strokec7 ,\cf3 \strokec3 \
    \cf10 \strokec10 "last_name"\cf3 \strokec3  \cf9 \strokec9 =\cf3 \strokec3 > \cf10 \strokec10 "Dupont"\cf7 \strokec7 ,\cf3 \strokec3 \
    \cf10 \strokec10 "email"\cf3 \strokec3  \cf9 \strokec9 =\cf3 \strokec3 > \cf10 \strokec10 "martin.dupont@assembl\'e9e.fr"\cf3 \strokec3 \
  \cf7 \strokec7 \},\cf3 \strokec3 \
  etc\
\pard\pardeftab720\sl420\partightenfactor0
\cf7 \strokec7 ]\cf3 \strokec3 \
\pard\pardeftab720\sa240\partightenfactor0

\f2 \cf4 \cb1 \strokec4 Pour les tests, nous t'invitons \'e0 te poser et t'inspirer des tests pr\'e9c\'e9dents. Deux tests suffiront.\
\pard\pardeftab720\sl500\sa120\partightenfactor0

\f1\fs41\fsmilli20880 \cf2 \strokec2 3. Rendu attendu\
\pard\pardeftab720\sa240\partightenfactor0

\f2\fs28 \cf4 \strokec4 Un repo GitHub propre qui contient un fichier de scrapping pour chacun des trois exercices (dans le dossier lib), des tests pour chacun des scrappeurs (dossier spec), un Gemfile et un README qui explique le tout. Pas de surprise.\
}